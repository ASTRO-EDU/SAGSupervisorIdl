/*******************************************************************************
Copyright (C) 2020 INAF

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.
You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.

Authors:
Andrea Bulgarelli <andrea.bulgarelli@inaf.it>
Leonardo Baroncelli <leonardo.baroncelli@inaf.it>
Nicolo' Parmiggiani <nicolo.parmiggiani@inaf.it>
Antonio Addis <antonio.addis@inaf.it>
*******************************************************************************/

#ifndef _TYPES_IDL_
#define _TYPES_IDL_

#pragma prefix "sag"

module TYPES
{ 


	// NOTIFICATION CHANNELS ----------------------------------------------- 

	const string CHANNELNAME_MON = "mon";

	struct ChannelEvent_FROM_MON {
		string msg;
		long value;
	};
	struct ChannelEvent_TO_MON {
		string msg;
		long value;
	};


	const string CHANNELNAME_ADH = "adh";

	struct ChannelEvent_FROM_ADH {
		string msg;
		long value;
	};
	struct ChannelEvent_TO_ADH {
		string msg;
		long value;
	};


	const string CHANNELNAME_CC = "cc";

	struct ChannelEvent_FROM_CC {
		string msg;
		long value;
	};
	struct ChannelEvent_TO_CC {
		string msg;
		long value;
	};


	const string CHANNELNAME_RM = "rm";

	struct ChannelEvent_FROM_RM {
		string msg;
		long value;
	};
	struct ChannelEvent_TO_RM {
		string msg;
		long value;
	};


	const string CHANNELNAME_HMI = "hmi";

	struct ChannelEvent_FROM_HMI {
		string msg;
		long value;
	};
	struct ChannelEvent_TO_HMI {
		string msg;
		long value;
	};

	// INTERNAL MONITORING -------------------------------------------------
	
	struct MonitoredParam {
		string name;
		double value;
	};

	typedef sequence<MonitoredParam> MonitoredParamsList;



	// SAG TYPES ----------------------------------------------------------- 

	struct Telescope {
		string type; /* SST, MST, LST */
	};

	typedef sequence<Telescope> TelescopeList;

	struct SubArray {
		long subArrayId;
		TelescopeList sbTelescopeList;
	};

	struct Coordinates {
		double az;
		double el;
	};

	struct Target {
		long     tid;
		Coordinates tCoordinates;
		long   expTime;  /* seconds */
	};

	
	struct ObservationBlock {
		double plannedDuration;
		double scheduledStartTime;
		double actualStartTime;
		string id;
		Target obTarget;
		double executeDuration;
	};

	typedef sequence<ObservationBlock> ObservationBlockList;

	struct SchedulingBlock {
		string sBid;
		string proposalId;
		SubArray sbSubArray;
		ObservationBlockList sbObservationBlockList;
	};


};



#endif

