#ifndef  _SAGErr_IDL_
#define  _SAGErr_IDL_
	
/*******************************************************************************
Copyright (C) 2020 INAF

This software is distributed under the terms of the BSD-3-Clause license.

Authors:
Andrea Bulgarelli <andrea.bulgarelli@inaf.it>
Leonardo Baroncelli <leonardo.baroncelli@inaf.it>
Nicolo' Parmiggiani <nicolo.parmiggiani@inaf.it>
Antonio Addis <antonio.addis@inaf.it>
*******************************************************************************/

#include <acserr.idl>

#pragma prefix "sag"
 	
module ACSErr 
{
	// type
	const ACSErr::ACSErrType SAGErr = 900000;
}; // module ACSErr

module SAGErr
{
	 const ACSErr::ErrorCode SAGGeneric = 0;
	 const ACSErr::ErrorCode SAGSupervisorAlreadyActivated = 1;
	 const ACSErr::ErrorCode SAGSupervisorAlreadyDeactivated = 2;
	 const ACSErr::ErrorCode SAGSubArrayManagerAlreadyActivated = 3;
	 const ACSErr::ErrorCode SAGSubArrayManagerAlreadyDeactivated = 4;
	 const ACSErr::ErrorCode SAGSubArrayManagerIsNotRunning = 5;
	 const ACSErr::ErrorCode SAGNoObservingBlocksAvailable = 6;
	 const ACSErr::ErrorCode SAGRecoAlreadyActivated = 7;
	 const ACSErr::ErrorCode SAGRecoAlreadyDeactivated = 8;
	 const ACSErr::ErrorCode SAGDataQualityAlreadyActivated = 9;
	 const ACSErr::ErrorCode SAGDataQualityAlreadyDeactivated = 10;
	 const ACSErr::ErrorCode SAGSciAlreadyActivated = 11;
	 const ACSErr::ErrorCode SAGSciAlreadyDeactivated = 12;
	 const ACSErr::ErrorCode SAGSchedulingBlockIdNotFoundInDatabase = 13;
	 const ACSErr::ErrorCode SAGSchedulingBlockAlreadyInProcessing = 14;
	 const ACSErr::ErrorCode SAGSchedulingBlockIsAlreadyDeactivated = 15;
	 const ACSErr::ErrorCode SAGDataProcessingAlreadyStarted = 16;
	 const ACSErr::ErrorCode SAGDataProcessingAlreadyStopped = 17;
	
	// excption for type:
	exception SAGErrEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	// excptions for codes:
	exception SAGGenericEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGSupervisorAlreadyActivatedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGSupervisorAlreadyDeactivatedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGSubArrayManagerAlreadyActivatedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGSubArrayManagerAlreadyDeactivatedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGSubArrayManagerIsNotRunningEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGNoObservingBlocksAvailableEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGRecoAlreadyActivatedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGRecoAlreadyDeactivatedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGDataQualityAlreadyActivatedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGDataQualityAlreadyDeactivatedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGSciAlreadyActivatedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGSciAlreadyDeactivatedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGSchedulingBlockIdNotFoundInDatabaseEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGSchedulingBlockAlreadyInProcessingEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGSchedulingBlockIsAlreadyDeactivatedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGDataProcessingAlreadyStartedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SAGDataProcessingAlreadyStoppedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	
}; // module SAGErr

#endif

